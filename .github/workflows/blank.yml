name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Clona el repositorio
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2️⃣ Instala dependencias (ejemplo para Node.js)
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install dependencies
      run: npm install

    # 3️⃣ Ejecuta pruebas automatizadas
    - name: Run tests
      run: npm test

    # 4️⃣ Escaneo de vulnerabilidades
    - name: Security scan with npm audit
      run: npm audit --audit-level=high

    # Alternativa avanzada con GitHub CodeQL
    # - name: CodeQL Analysis
    #   uses: github/codeql-action/init@v3

    # 5️⃣ Construcción de la aplicación
    - name: Build application
      run: npm run build

    # 6️⃣ Despliegue en entorno de pruebas
    - name: Deploy to test environment
      env:
        DEPLOY_PATH: /var/www/test
      run: |
        echo "Simulando despliegue en entorno de pruebas..."
        mkdir -p $DEPLOY_PATH
        cp -r dist/* $DEPLOY_PATH/
